name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
    # 1. Checkout
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. JDK 17
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # 3. Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container

    # 4. Permisos Gradle
    - name: Grant permission to Gradle
      run: chmod +x ./gradlew

    # 5. Build sin tests
    - name: Build with Gradle (skip tests)
      run: ./gradlew build -x test

    # 6. Login Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # 7. Build + Push
    - name: Build and push Docker image for EC2
      run: |
        docker buildx build \
          --platform linux/amd64 \
          -t ingflorez940315/img_franchise_webflux:V1 \
          -t ingflorez940315/img_franchise_webflux:latest \
          --push .

    # 8. Deploy en EC2 y pasar secrets
    - name: Deploy to EC2 via SSH
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: 54.226.216.15
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          echo "Pulling Docker image..."
          sudo docker pull ingflorez940315/img_franchise_webflux:V1

          echo "Stopping old container (if exists)..."
          sudo docker stop ms-franchises-container || true
          sudo docker rm ms-franchises-container || true

          echo "Running new container with injected AWS credentials..."
          sudo docker run -d \
            --name ms-franchises-container \
            -p 8080:8080 \
            -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            ingflorez940315/img_franchise_webflux:V1

          echo "Verifying environment variables..."
          sudo docker exec ms-franchises-container printenv | grep AWS
